package Sokoban;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.border.Border;
import javax.swing.text.DefaultCaret;

public abstract class GUI {

	//GUI Default Height and Width
	private static final int DEFULT_DRAWING_HEIGHT = 600;
	private static final int DEFULT_DRAWING_WIDTH = 800;
	private static final int TEXT_OUTPUT_ROWS=5;
	
	//Variables for the GUI
	private JFrame frame;
	private JPanel controls;
	protected JComponent drawing;
	private JTextArea textOutputArea;
	
	
	/*
	 * Enum of operations that can be used to move the character or map
	 */
	public enum Move {
		UP, LEFT, DOWN, RIGHT, ZOOM_IN, ZOOM_OUT
	};
	
	
	//These are the methods you need to implement
	protected abstract void redraw(Graphics g);
	
	protected abstract void onMove(Move m);
	
	
	public void redraw(){
		frame.repaint();
	}
	/*
	 * This calls the Initialise() to set up the GUI
	 */
	public GUI(){
		initialise();
	}
	
	
	
	/*
	 * This Initialises The GUI
	 * Creates all of the buttons
	 */
	@SuppressWarnings("serial")
	private void initialise() {
		JButton quit = new JButton("Quit");
		quit.addActionListener(new ActionListener(){
			/*
			 * Will exit the GUI when the "Quit" Button is Pressed
			 */
			@Override
			public void actionPerformed(ActionEvent ev) {
				System.exit(0);
			}
		});
		
		
		/*
		 * Adding Moving Buttons
		 * Left/WEST
		 */
		JButton left = new JButton("\u2190");
		left.addActionListener( new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				onMove(Move.LEFT);
				redraw();
			}
		});
		
		//Right/EAST
		JButton right = new JButton("\u2192");
		right.addActionListener( new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				onMove(Move.RIGHT);
				redraw();
			}
		});
		
		//Up/North
		JButton up = new JButton("\u2191");
		up.addActionListener( new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				onMove(Move.UP);
				redraw();
			}
		});
		
		//Down/South
		JButton down = new JButton("\u2193");
		down.addActionListener( new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				onMove(Move.DOWN);
				redraw();
			}
			
		});
		
		//Zoom In 
		
		//Zoom Out
		
		
		/*
		 * Making the Layout for the Conrol Panel
		 */
		controls = new JPanel();
		controls.setLayout(new BoxLayout(controls, BoxLayout.LINE_AXIS));
		
		//Make an empty border so componets arent up on the screen
		
		Border edge = BorderFactory.createEmptyBorder(5, 5, 5, 5);
		controls.setBorder(edge);
		
		JPanel q = new JPanel();
		q.setLayout(new GridLayout(2,1));
		q.setMaximumSize(new Dimension(50,100));
		q.add(quit);
		controls.add(q);
		
		//Rigid area, space components out
		controls.add(Box.createRigidArea(new Dimension(15,0)));
		
		JPanel nav = new JPanel();
		nav.setMaximumSize(new Dimension(150,60));
		nav.setLayout(new GridLayout(2,2));//(2,3) if add Zoom
		nav.add(up);
		nav.add(left);
		nav.add(down);
		nav.add(right);
		controls.add(nav);
		controls.add(Box.createRigidArea(new Dimension(15,0)));
		controls.add(Box.createHorizontalGlue());
		
		//Drawing Component 
		
		drawing = new JComponent(){
			protected void paintComponent(Graphics g){
				redraw(g);
			}
		};
		
		drawing.setPreferredSize(new Dimension(DEFULT_DRAWING_WIDTH,DEFULT_DRAWING_HEIGHT));
		drawing.setVisible(true);
		
		
		//Make a text output area
		
		textOutputArea = new JTextArea(TEXT_OUTPUT_ROWS,0);
		textOutputArea.setLineWrap(true);
		textOutputArea.setWrapStyleWord(true);
		textOutputArea.setEditable(false);
		JScrollPane scroll = new JScrollPane(textOutputArea);
		DefaultCaret caret = (DefaultCaret) textOutputArea.getCaret();
		caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
		
		//Make main Frame
		
		JSplitPane split = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
		split.setDividerSize(5);
		split.setContinuousLayout(true);
		split.setResizeWeight(1);
		split.setBorder(BorderFactory.createEmptyBorder());
		split.setTopComponent(drawing);
		split.setBottomComponent(scroll);
		
		frame = new JFrame("Sokoban");
		
		//Makes program actually quit when button pressed
		
		
	} //End of Init()
	
	
}
